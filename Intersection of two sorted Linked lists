Recursive:

Node* findIntersection(Node* head1, Node* head2)
{
    if(head1==NULL || head2==NULL)
    {
        return NULL;
    }
    
    if(head1->data<head2->data)
    {
        return findIntersection(head1->next,head2);
    }
    if(head1->data>head2->data)
    {
        return findIntersection(head1,head2->next);
    }
    
    Node* temp=new Node(head1->data);
    
    temp->next=findIntersection(head1->next,head2->next);
    
    return temp;
}

Non Recursive Approach:

Node* sortedIntersect(Node* a,Node* b)
{
  Node dummy;
  Node* tail=&dummy;
  dummy.next=NULL;

  while(a!=NULL&& b!=NULL)
  {
    if(a->data==b->data)
    {
      push((&tail->next),a->data);
      tail=tail->next;
      a=a->next;
      b=b->next;
    }
    else if(a->data<b->data)
    {
      a=a->next;
    }
    else
    {
      b=b->next;
    }

  }

  return (dummy.next);
}
