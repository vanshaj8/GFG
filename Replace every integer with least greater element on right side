#include<bits/stdc++.h>
using namespace std;

struct Node
{
int data;
Node* left;
Node* right;	
};
Node* newNode(int value)
{
	Node* newNode=new Node();
	newNode->data=value;
	newNode->left=newNode->right=NULL;
	return newNode;
}

Node* insert(Node* root,int value,Node* &succ)
{
	if(root==NULL)
	{
		return root=newNode(value);
	}
	else if(value<root->data)
	{
		succ=root;
		root->left=insert(root->left,value,succ);
	}
	else if(value>root->data)
	{
		root->right=insert(root->right,value,succ);
	}
	
	return root;
}

void replace(int arr[],int n)
{
	Node* root=NULL;
	for(int i=n-1;i>=0;i--)
	{
		Node* succ=NULL;
		root=insert(root,arr[i],succ);
		if(succ)
		{
			arr[i]=succ->data;
		}
		else
		{
			arr[i]=-1;
		}
	}
}
int main()
{
int arr[] = { 8,  58, 71, 18, 31, 32, 63, 92,
                  43, 3,  91, 93, 25, 80, 28 };
    int n = sizeof(arr) / sizeof(arr[0]);
 
    replace(arr, n);
 
    for (int i = 0; i < n; i++)
        cout << arr[i] << " ";
 return 0;       
}
