#include<bits/stdc++.h>
using namespace std;

void add_edge(vector<int>adj[],int e ,int v)
{
	adj[e].push_back(v);
	adj[v].push_back(e);
}

void bfs_traversal(vector<int>graph[],int x,bool vis[],int v)
{
	queue<int> q;
	q.push(x);
	vis[x]=true;
	while(!q.empty())
	{
		int current=q.front();
    cout<<current<<" ";
		q.pop();
		for(auto itr : graph[current])
		{
			if(!vis[itr])
			{
				vis[itr]=true;
				q.push(itr);
			}
		}
	}
}
int main()
{
	int v=5;
	vector<int>graph[v];
	add_edge(graph, 0, 1); 
    add_edge(graph, 0, 4); 
    add_edge(graph, 1, 2); 
    add_edge(graph, 1, 3); 
    add_edge(graph, 1, 4); 
    add_edge(graph, 2, 3); 
    add_edge(graph, 3, 4); 
	bool vis[]={false};
	
	bfs_traversal(graph,0,vis,v);
	
	return 0;
}
