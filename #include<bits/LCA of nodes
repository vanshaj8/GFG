#include<bits/stdc++.h>
using namespace std;

struct bstnode
{
	int data;
	bstnode* left;
	bstnode* right;
};
bstnode* newNode(int value)
{
	bstnode* temp=new bstnode();
	temp->data=value;
	temp->left=NULL;
	temp->right=NULL;
	
	return temp;
}
bstnode* insert(bstnode* root,int value)
{
	if(root==NULL)
	{
		root=newNode(value);
	}
	else if(value<=root->data)
	{
		root->left=insert(root->left,value);
	}
	else
	{
		root->right=insert(root->right,value);
	}
	
	return root;
}

bstnode* lca(bstnode* root,int n1 ,int n2)
{
	if(root==NULL)
	{
		return NULL;
	}
	if(root->data>n1 && root->data >n2)
	{
		return lca(root->left,n1,n2);
	}
	if(root->data<n1 && root->data<n2)
	{
		return lca(root->right,n1,n2);
	}
	
	return root;
}
int main()
{
	bstnode *root        = newNode(20); 
    root->left               = newNode(8); 
    root->right              = newNode(22); 
    root->left->left         = newNode(4); 
    root->left->right        = newNode(12); 
    root->left->right->left  = newNode(10); 
    root->left->right->right = newNode(14);
	
	
	
	int n1 = 10, n2 = 14; 
    bstnode *t = lca(root, n1, n2); 
    printf("LCA of %d and %d is %d \n", n1, n2, t->data); 
  
    n1 = 14, n2 = 8; 
    t = lca(root, n1, n2); 
    printf("LCA of %d and %d is %d \n", n1, n2, t->data); 
  
    n1 = 10, n2 = 22; 
    t = lca(root, n1, n2); 
    printf("LCA of %d and %d is %d \n", n1, n2, t->data);
	
	
	
	
	return 0;
}
