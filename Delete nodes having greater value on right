class Solution
{
    public:
    Node* reverse(Node* head)
    {
        Node* curr=head;
        Node* prev=NULL;
        Node* next=NULL;
        
        while(curr!=NULL)
        {
            next=curr->next;
            curr->next=prev;
            prev=curr;
            curr=next;
        }
        
        return prev;
    }
    Node* deletes(Node* head)
    {
        if(head==NULL || head->next==NULL)
        {
            return head;
        }
        
        Node* curr=head;
        int mx=head->data;
        Node* hold=NULL;
        while(curr && curr->next)
        {
            if(curr->next->data <mx)
            {
                hold=curr->next;
                curr->next=curr->next->next;
                delete(hold);
            }
            else
            {
                mx=curr->next->data;
                curr=curr->next;
            }
        }
        
        return head;
    }
    Node *compute(Node *head)
    {
        if(head==NULL && head->next==NULL)
        {
            return head;
        }
        
        head=reverse(head);
        head=deletes(head);
        head=reverse(head);
        return head;
    }
    
};
